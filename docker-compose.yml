version: "2.1"

networks:
  default:
    name: ledger
    driver: bridge

services:
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:5.2.2
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    #network_mode: "host"
  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:5.2.2 # kafka version 2.2.1
    depends_on:
      - zookeeper
    ports:
      - "19092:19092"
      - "29092:29092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: "SSL://kafka:19092,SSL2://localhost:29092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: SSL:SSL,SSL2:SSL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_SSL_KEYSTORE_FILENAME: kafka.broker1.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: broker1_keystore_creds
      KAFKA_SSL_KEY_CREDENTIALS: broker1_sslkey_creds
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.broker1.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: broker1_truststore_creds
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: " "
      KAFKA_SSL_CLIENT_AUTH: requested
      KAFKA_SECURITY_INTER_BROKER_PROTOCOL: SSL
    volumes:
      - ./test/secrets:/etc/kafka/secrets

  eyeshade-redis:
    container_name: eyeshade-redis
    image: redis:latest
    ports:
      - "3011:6379"

  eyeshade-postgres:
    container_name: eyeshade-postgres
    image: postgres:11.9
    ports:
      - "3012:5432"
    environment:
      - "POSTGRES_USER=eyeshade"
      - "POSTGRES_PASSWORD=password"
  eyeshade-consumer:
    container_name: eyeshade-consumer
    command: "npm run eyeshade-consumer"
    extends:
      file: base.yml
      service: ledger
    environment:
      - "DATABASE_URL=postgres://eyeshade:password@eyeshade-postgres/eyeshade"
      - "SERVICE=eyeshade"
      - "DYNO=worker.1"
    depends_on:
      - eyeshade-postgres
      - kafka
    volumes:
      - ./eyeshade:/usr/src/app/eyeshade

  eyeshade-web:
    container_name: eyeshade-web
    ports:
      - "3002:3002"
    command: "npm run eyeshade-server"
    extends:
      file: base.yml
      service: ledger
    environment:
      - "PORT=3002"
      - "DATABASE_URL=postgres://eyeshade:password@eyeshade-postgres/eyeshade"
      - "SERVICE=eyeshade"
      - "DYNO=web.1"
    depends_on:
      - eyeshade-redis
      - eyeshade-postgres
    volumes:
      - ./eyeshade:/usr/src/app/eyeshade

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    expose:
      - 9090
    ports:
      - "9090:9090"
  grafana:
    image: grafana/grafana:latest
    depends_on:
      - prometheus
    expose:
      - 3000
    ports:
      - 3000:3000
    volumes:
      # - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    container_name: grafana
    restart: unless-stopped
    environment:
      - "GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER-admin}"
      - "GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD-admin}"
      - "GF_USERS_ALLOW_SIGN_UP=false"
      - "GF_INSTALL_PLUGINS=grafana-worldmap-panel"
